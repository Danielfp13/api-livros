CREATE TABLE estado(
	id INTEGER PRIMARY KEY,
	uf VARCHAR(2) NOT NULL UNIQUE ,
	nome VARCHAR(100) 
);

CREATE TABLE cidade(
	id INTEGER PRIMARY KEY,
	nome VARCHAR(100) NOT NULL,
	id_estado INTEGER REFERENCES estado(id) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE endereco(
	id INTEGER GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 11 MINVALUE 11 MAXVALUE 2147483647 CACHE 1 ) PRIMARY KEY,
	logradouro VARCHAR(100) NOT NULL,
	numero VARCHAR(5)NOT NULL,
	bairro VARCHAR (100) NOT NULL,
	complemento VARCHAR(100),
	cep VARCHAR(9) NOT NULL,
 	id_cidade INTEGER NOT NULL REFERENCES cidade(id) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE usuario(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 11 MINVALUE 11 MAXVALUE 2147483647 CACHE 1 ) PRIMARY KEY,
	nome VARCHAR(150) NOT NULL,
	email VARCHAR(150) NOT NULL UNIQUE,
	data_nascimento  DATE NOT NULL,
	senha VARCHAR(30) NOT NULL,
	ativo BOOLEAN ,
	data_cadastro DATE NOT NULL,
	data_atualizacao DATE,
	Telefone1 VARCHAR(15)  NOT NULL UNIQUE ,
	Telefone2 VARCHAR(15) UNIQUE,
	foto VARCHAR(255),
	cpf VARCHAR(11) UNIQUE,
	termo BOOLEAN NOT NULL,
	id_endereco INTEGER NOT NULL REFERENCES endereco(id) ON UPDATE CASCADE ON DELETE CASCADE
	);

CREATE TABLE livro(
	id INTEGER GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 11 MINVALUE 11 MAXVALUE 2147483647 CACHE 1 ) PRIMARY KEY,
	Titulo VARCHAR(100) NOT NULL,
	numero_paginas INTEGER NOT NULL,
	autor VARCHAR(100) NOT NULL,
	preco DOUBLE PRECISION NOT NULL ,
	data_Compra DATE,
	situacao_compra INTEGER CHECK(situacao_compra IN(1,2,3,4,5,6,7)) NOT NULL,
	situacao_atual INTEGER CHECK(situacao_atual IN(1,2,3,4,5,6,7)) NOT NULL,
	id_usuario INTEGER NOT NULL REFERENCES usuario(id) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE categoria(
	id INTEGER GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 11 MINVALUE 11 MAXVALUE 2147483647 CACHE 1)  PRIMARY KEY,
	tipo INTEGER CHECK(tipo IN(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)) NOT NULL
);
CREATE TABLE categoria_livro(
	id_categoria INTEGER NOT NULL REFERENCES categoria(id) ON UPDATE CASCADE ON DELETE NO ACTION,
	id_livro INTEGER NOT NULL REFERENCES livro(id) ON UPDATE CASCADE ON DELETE NO ACTION,
	PRIMARY KEY(id_categoria,id_livro)
);	


	